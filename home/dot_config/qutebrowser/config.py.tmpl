{{- $color := include ".gen/color.json" | mustFromJson -}}

import os

# Define the colors
COLOR_BASE00 = "#{{- $color.base00.hex.rgb -}}" # Background
COLOR_BASE01 = "#{{- $color.base01.hex.rgb -}}" # Lighter background
COLOR_BASE02 = "#{{- $color.base02.hex.rgb -}}" # Selection background
COLOR_BASE03 = "#{{- $color.base03.hex.rgb -}}" # Comments
COLOR_BASE04 = "#{{- $color.base04.hex.rgb -}}" # Dark foreground
COLOR_BASE05 = "#{{- $color.base05.hex.rgb -}}" # Default foreground
COLOR_BASE06 = "#{{- $color.base06.hex.rgb -}}" # Light foreground
COLOR_BASE07 = "#{{- $color.base07.hex.rgb -}}" # Light background
COLOR_BASE08 = "#{{- $color.base08.hex.rgb -}}" # Red
COLOR_BASE09 = "#{{- $color.base09.hex.rgb -}}" # Orange
COLOR_BASE0A = "#{{- $color.base0a.hex.rgb -}}" # Yellow
COLOR_BASE0B = "#{{- $color.base0b.hex.rgb -}}" # Green
COLOR_BASE0C = "#{{- $color.base0c.hex.rgb -}}" # Cyan
COLOR_BASE0D = "#{{- $color.base0d.hex.rgb -}}" # Blue
COLOR_BASE0E = "#{{- $color.base0e.hex.rgb -}}" # Pink
COLOR_BASE0F = "#{{- $color.base0f.hex.rgb -}}" # Extra color

# Define fonts
FONT_NAME = "{{- .font.name -}}"
FONT_SIZE = "{{- .font.size -}}pt"

# Define dimensions and style related to that
BORDER_STYLE      = "solid"
BORDER_WIDTH      = "1px"
INDICATOR_WIDTH   = 2
PADDING           = {{ .dim.padding }}
RADIUS            = 0
SCROLLBAR_PADDING = 0
SCROLLBAR_WIDTH   = 8

START_PAGE = "https://start.duckduckgo.com/"

#==============================================================================
# Settings from GUI
#==============================================================================

# Uncomment this to load settings from the GUI
config.load_autoconfig(False)

#==============================================================================
# Appearance and Behaviour
#==============================================================================

c.aliases = {'w': 'session-save', 'q': 'close', 'wq': 'quit --save'}
c.auto_save.interval = 15000 # milliseconds
c.auto_save.session = True
c.backend = 'webengine'
# c.bindings.key_mappings = {
#     '<Ctrl-[>':       '<Escape>',
#     '<Ctrl-6>':       '<Ctrl-^>',
#     '<Ctrl-J>':       '<Return>',
#     '<Ctrl-M>':       '<Return>',
#     '<Ctrl-Enter>':   '<Ctrl-Return>',
#     '<Enter>':        '<Return>',
#     '<Shift-Enter>':  '<Return>',
#     '<Shift-Return>': '<Return>',
# }
c.colors.completion.category.bg = COLOR_BASE00
c.colors.completion.category.border.bottom = COLOR_BASE00
c.colors.completion.category.border.top = COLOR_BASE00
c.colors.completion.category.fg = COLOR_BASE05
c.colors.completion.even.bg = COLOR_BASE00
c.colors.completion.fg = COLOR_BASE05
c.colors.completion.item.selected.bg = COLOR_BASE02
c.colors.completion.item.selected.border.bottom = COLOR_BASE02
c.colors.completion.item.selected.border.top = COLOR_BASE02
c.colors.completion.item.selected.fg = COLOR_BASE05
c.colors.completion.match.fg = COLOR_BASE08
c.colors.completion.odd.bg = COLOR_BASE01
c.colors.completion.scrollbar.bg = COLOR_BASE00
c.colors.completion.scrollbar.fg = COLOR_BASE05
c.colors.downloads.bar.bg = COLOR_BASE00
c.colors.downloads.error.bg = COLOR_BASE08
c.colors.downloads.error.fg = COLOR_BASE00
c.colors.downloads.start.bg = COLOR_BASE00
c.colors.downloads.start.fg = COLOR_BASE05
c.colors.downloads.stop.bg = COLOR_BASE00
c.colors.downloads.stop.fg = COLOR_BASE05
c.colors.downloads.system.bg = 'none'
c.colors.downloads.system.fg = 'none'
c.colors.hints.bg = COLOR_BASE0A
c.colors.hints.fg = COLOR_BASE00
c.colors.hints.match.fg = COLOR_BASE0B
c.colors.keyhint.bg = COLOR_BASE00
c.colors.keyhint.fg = COLOR_BASE05
c.colors.keyhint.suffix.fg = COLOR_BASE0A
c.colors.messages.error.bg = COLOR_BASE08
c.colors.messages.error.border = COLOR_BASE05
c.colors.messages.error.fg = COLOR_BASE05
c.colors.messages.info.bg = COLOR_BASE00
c.colors.messages.info.border = COLOR_BASE05
c.colors.messages.info.fg = COLOR_BASE05
c.colors.messages.warning.bg = COLOR_BASE09
c.colors.messages.warning.border = COLOR_BASE05
c.colors.messages.warning.fg = COLOR_BASE00
c.colors.prompts.bg = COLOR_BASE00
c.colors.prompts.border = f'{BORDER_WIDTH} {BORDER_STYLE} {COLOR_BASE05}'
c.colors.prompts.fg = COLOR_BASE05
c.colors.prompts.selected.bg = COLOR_BASE02
c.colors.statusbar.caret.bg = COLOR_BASE00
c.colors.statusbar.caret.fg = COLOR_BASE05
c.colors.statusbar.caret.selection.bg = COLOR_BASE02
c.colors.statusbar.caret.selection.fg = COLOR_BASE05
c.colors.statusbar.command.bg = COLOR_BASE00
c.colors.statusbar.command.fg = COLOR_BASE05
c.colors.statusbar.command.private.bg = COLOR_BASE05
c.colors.statusbar.command.private.fg = COLOR_BASE00
c.colors.statusbar.insert.bg = COLOR_BASE00
c.colors.statusbar.insert.fg = COLOR_BASE05
c.colors.statusbar.normal.bg = COLOR_BASE00
c.colors.statusbar.normal.fg = COLOR_BASE05
c.colors.statusbar.passthrough.bg = COLOR_BASE00
c.colors.statusbar.passthrough.fg = COLOR_BASE05
c.colors.statusbar.private.bg = COLOR_BASE05
c.colors.statusbar.private.fg = COLOR_BASE00
c.colors.statusbar.progress.bg = COLOR_BASE05
c.colors.statusbar.url.error.fg = COLOR_BASE09
c.colors.statusbar.url.fg = COLOR_BASE05
c.colors.statusbar.url.hover.fg = COLOR_BASE0C
c.colors.statusbar.url.success.http.fg = COLOR_BASE05
c.colors.statusbar.url.success.https.fg = COLOR_BASE0B
c.colors.statusbar.url.warn.fg = COLOR_BASE0A
c.colors.tabs.bar.bg = COLOR_BASE00
c.colors.tabs.even.bg = COLOR_BASE00
c.colors.tabs.even.fg = COLOR_BASE03
c.colors.tabs.indicator.error = COLOR_BASE00
c.colors.tabs.indicator.start = COLOR_BASE0D
c.colors.tabs.indicator.stop = COLOR_BASE0B
c.colors.tabs.indicator.system = 'rgb'
c.colors.tabs.odd.bg = COLOR_BASE00
c.colors.tabs.odd.fg = COLOR_BASE03
c.colors.tabs.pinned.even.bg = COLOR_BASE00
c.colors.tabs.pinned.even.fg = COLOR_BASE03
c.colors.tabs.pinned.odd.bg = COLOR_BASE00
c.colors.tabs.pinned.odd.fg = COLOR_BASE03
c.colors.tabs.pinned.selected.even.bg = COLOR_BASE02
c.colors.tabs.pinned.selected.even.fg = COLOR_BASE05
c.colors.tabs.pinned.selected.odd.bg = COLOR_BASE02
c.colors.tabs.pinned.selected.odd.fg = COLOR_BASE05
c.colors.tabs.selected.even.bg = COLOR_BASE02
c.colors.tabs.selected.even.fg = COLOR_BASE05
c.colors.tabs.selected.odd.bg = COLOR_BASE02
c.colors.tabs.selected.odd.fg = COLOR_BASE05
c.colors.webpage.bg = 'white'
# c.completion.cmd_history_max_items = 100
# c.completion.delay = 0 # milliseconds
c.completion.height = '30%'
c.completion.min_chars = 1
c.completion.quick = True
c.completion.scrollbar.padding = SCROLLBAR_PADDING
c.completion.scrollbar.width = SCROLLBAR_WIDTH
c.completion.show = 'always'
c.completion.shrink = False
# c.completion.timestamp_format = '%Y-%m-%d'
c.completion.use_best_match = False
# c.completion.web_history.exclude = []
# c.completion.web_history.max_items = -1
c.confirm_quit = ['always']
c.content.autoplay = False
# c.content.cache.appcache = True
# c.content.cache.maximum_pages = 0
# c.content.cache.size = None
c.content.canvas_reading = True
# c.content.cookies.accept = 'all'
# c.content.cookies.store = True
# c.content.default_encoding = 'iso-8859-1'
# c.content.desktop_capture = 'ask'
# c.content.dns_prefetch = True
# c.content.frame_flattening = False
# c.content.geolocation = 'ask'
# c.content.headers.accept_language = 'en-US,en'
# c.content.headers.custom = {}
c.content.headers.do_not_track = True
# c.content.headers.referer = 'same-domain'
# c.content.headers.user_agent = None
# c.content.blocking.adblock.lists = ['https://easylist.to/easylist/easylist.txt', 'https://easylist.to/easylist/easyprivacy.txt']
c.content.blocking.enabled = True
# c.content.blocking.method = 'auto'
# c.contentblocking.lists = []
# c.contentblocking.whitelist = []
c.content.fullscreen.window = True
c.content.hyperlink_auditing = False
c.content.images = True
c.content.javascript.alert = True
c.content.javascript.can_access_clipboard = True
# c.content.javascript.can_close_tabs = False
c.content.javascript.can_open_tabs_automatically = False
c.content.javascript.enabled = True
# c.content.javascript.log = {
#     'unknown': 'debug',
#     'info':    'debug',
#     'warning': 'debug',
#     'error':   'debug',
# }
c.content.javascript.modal_dialog = False
c.content.javascript.prompt = True
# c.content.local_content_can_access_file_urls = True
c.content.local_content_can_access_remote_urls = True
c.content.local_storage = True
# c.content.media_capture = 'ask'
# c.content.mouse_lock = 'ask'
c.content.mute = False
# c.content.netrc_file = None
# c.content.notifications = 'ask'
c.content.pdfjs = True
# c.content.persistent_storage = 'ask'
# c.content.plugins = False
# c.content.print_element_backgrounds = True
c.content.private_browsing = False
# c.content.proxy = 'system'
# c.content.proxy_dns_requests = True
# c.content.register_protocol_handler = 'ask'
# c.content.ssl_strict = 'ask'
# c.content.user_stylesheets = []
# c.content.webgl = True
# c.content.webrtc_ip_handling_policy = 'all-interfaces'
# c.content.xss_auditing = True
c.downloads.location.directory = None
c.downloads.location.prompt = False
# c.downloads.location.remember = True
# c.downloads.location.suggestion = 'path'
# c.downloads.open_dispatcher = None
c.downloads.position = 'top'
# c.downloads.remove_finished = -1 # milliseconds
# c.editor.command = ['gvim', '-f', '{file}', '-c', 'normal {line}G{column0}l']
c.editor.encoding = 'utf-8'
c.fonts.completion.category = 'bold default_size default_family'
c.fonts.completion.entry = 'default_size default_family'
c.fonts.contextmenu = None
c.fonts.debug_console = 'default_size default_family'
c.fonts.default_family = [
  FONT_NAME,
  "xos4 Terminus",
  "Terminus",
  "Monospace",
  "DejaVu Sans Mono",
  "Monaco",
  "Bitstream Vera Sans Mono",
  "Andale Mono",
  "Courier New",
  "Courier",
  "Liberation Mono",
  "monospace",
  "Fixed",
  "Consolas",
  "Terminal",
]
c.fonts.default_size = FONT_SIZE
c.fonts.downloads = 'default_size default_family'
c.fonts.hints = 'bold default_size default_family'
c.fonts.keyhint = 'default_size default_family'
c.fonts.messages.error = 'default_size default_family'
c.fonts.messages.info = 'default_size default_family'
c.fonts.messages.warning = 'default_size default_family'
c.fonts.prompts = 'default_size sans-serif'
c.fonts.statusbar = 'default_size default_family'
c.fonts.tabs.selected = 'default_size default_family'
c.fonts.tabs.unselected = 'default_size default_family'
# c.fonts.web.family.cursive = ''
# c.fonts.web.family.fantasy = ''
# c.fonts.web.family.fixed = ''
# c.fonts.web.family.sans_serif = ''
# c.fonts.web.family.serif = ''
# c.fonts.web.family.standard = ''
# c.fonts.web.size.default = 16
# c.fonts.web.size.default_fixed = 13
# c.fonts.web.size.minimum = 0
# c.fonts.web.size.minimum_logical = 6
c.hints.auto_follow = 'unique-match'
c.hints.auto_follow_timeout = 0
c.hints.border = f'{BORDER_WIDTH} {BORDER_STYLE} {COLOR_BASE05}'
c.hints.chars = 'asdfghjkl'
# c.hints.dictionary = '/usr/share/dict/words'
# c.hints.find_implementation = 'python'
c.hints.hide_unmatched_rapid_hints = True
c.hints.min_chars = 1
c.hints.mode = 'letter'
# c.hints.next_regexes = ['\\bnext\\b', '\\bmore\\b', '\\bnewer\\b', '\\b[>→≫]\\b', '\\b(>>|»)\\b', '\\bcontinue\\b']
# c.hints.prev_regexes = ['\\bprev(ious)?\\b', '\\bback\\b', '\\bolder\\b', '\\b[<←≪]\\b', '\\b(<<|«)\\b']
c.hints.scatter = True
c.hints.uppercase = False
# c.history_gap_interval = 30
# c.input.escape_quits_reporter = True
# c.input.forward_unbound_keys = 'auto'
# c.input.insert_mode.auto_enter = True
# c.input.insert_mode.auto_leave = True
# c.input.insert_mode.auto_load = False
# c.input.insert_mode.plugins = False
# c.input.links_included_in_focus_chain = True
# c.input.partial_timeout = 5000 # milliseconds
# c.input.rocker_gestures = False
# c.input.spatial_navigation = False
# c.keyhint.blacklist = []
# c.keyhint.delay = 500 # milliseconds
c.keyhint.radius = RADIUS
# c.messages.timeout = 2000 # milliseconds
# c.new_instance_open_target = 'tab'
# c.new_instance_open_target_window = 'last-focused'
c.prompt.filebrowser = False
c.prompt.radius = RADIUS
# c.qt.args = []
# c.qt.force_platform = None
# c.qt.force_software_rendering = 'none'
c.qt.highdpi = True
# c.qt.low_end_device_mode = 'auto'
# c.qt.process_model = 'process-per-site-instance'
# c.scrolling.bar = 'when-searching'
# c.scrolling.smooth = False
c.search.ignore_case = 'smart'
c.search.incremental = True
# c.session.default_name = None
c.session.lazy_restore = True
## Languages to use for spell checking. You can check for available
## languages and install dictionaries using scripts/dictcli.py. Run the
## script with -h/--help for instructions.
## Type: List of String
## Valid values:
##   - af-ZA: Afrikaans (South Africa)
##   - bg-BG: Bulgarian (Bulgaria)
##   - ca-ES: Catalan (Spain)
##   - cs-CZ: Czech (Czech Republic)
##   - da-DK: Danish (Denmark)
##   - de-DE: German (Germany)
##   - el-GR: Greek (Greece)
##   - en-AU: English (Australia)
##   - en-CA: English (Canada)
##   - en-GB: English (United Kingdom)
##   - en-US: English (United States)
##   - es-ES: Spanish (Spain)
##   - et-EE: Estonian (Estonia)
##   - fa-IR: Farsi (Iran)
##   - fo-FO: Faroese (Faroe Islands)
##   - fr-FR: French (France)
##   - he-IL: Hebrew (Israel)
##   - hi-IN: Hindi (India)
##   - hr-HR: Croatian (Croatia)
##   - hu-HU: Hungarian (Hungary)
##   - id-ID: Indonesian (Indonesia)
##   - it-IT: Italian (Italy)
##   - ko: Korean
##   - lt-LT: Lithuanian (Lithuania)
##   - lv-LV: Latvian (Latvia)
##   - nb-NO: Norwegian (Norway)
##   - nl-NL: Dutch (Netherlands)
##   - pl-PL: Polish (Poland)
##   - pt-BR: Portuguese (Brazil)
##   - pt-PT: Portuguese (Portugal)
##   - ro-RO: Romanian (Romania)
##   - ru-RU: Russian (Russia)
##   - sh: Serbo-Croatian
##   - sk-SK: Slovak (Slovakia)
##   - sl-SI: Slovenian (Slovenia)
##   - sq: Albanian
##   - sr: Serbian
##   - sv-SE: Swedish (Sweden)
##   - ta-IN: Tamil (India)
##   - tg-TG: Tajik (Tajikistan)
##   - tr-TR: Turkish (Turkey)
##   - uk-UA: Ukrainian (Ukraine)
##   - vi-VN: Vietnamese (Viet Nam)
# c.spellcheck.languages = []
c.statusbar.padding = {'top': PADDING, 'bottom': PADDING, 'left': PADDING, 'right': PADDING}
c.statusbar.position = 'bottom'
c.statusbar.show = 'in-mode'
c.statusbar.widgets = ['keypress', 'url', 'scroll', 'history', 'progress']
# c.tabs.background = False
c.tabs.close_mouse_button = 'none'
c.tabs.close_mouse_button_on_bar = 'ignore'
# c.tabs.favicons.scale = 1.0
c.tabs.favicons.show = 'always'
c.tabs.indicator.padding = {'top': 2, 'bottom': 0, 'left': INDICATOR_WIDTH, 'right': 2 * INDICATOR_WIDTH}
c.tabs.indicator.width = INDICATOR_WIDTH
c.tabs.last_close = 'default-page'
c.tabs.max_width = -1
c.tabs.min_width = -1
c.tabs.mode_on_change = 'normal'
c.tabs.mousewheel_switching = False
c.tabs.new_position.related = 'next'
c.tabs.new_position.unrelated = 'last'
c.tabs.padding = {'top': PADDING, 'bottom': PADDING, 'left': PADDING, 'right': PADDING}
c.tabs.pinned.shrink = True
c.tabs.position = 'top'
c.tabs.select_on_remove = 'next'
c.tabs.show = 'multiple'
c.tabs.show_switching_delay = 800 # milliseconds
c.tabs.tabs_are_windows = False
c.tabs.title.alignment = 'left'
c.tabs.title.format = '{audio}{current_title}'
c.tabs.title.format_pinned = '{audio}'
# c.tabs.width = '20%'
c.tabs.wrap = True
c.url.auto_search = 'naive'
c.url.default_page = START_PAGE
# c.url.incdec_segments = ['path', 'query']
c.url.open_base_url = True
c.url.searchengines = {
  'DEFAULT': 'https://duckduckgo.com/?q={}',
  'd': 'https://duckduckgo.com/?q={}',
  'g': 'https://www.google.com/search?q={}'
}
c.url.start_pages = [START_PAGE]
# c.url.yank_ignored_parameters = ['ref', 'utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content']
# c.window.hide_decoration = False
# c.window.title_format = '{perc}{current_title}{title_sep}qutebrowser'
# c.zoom.default = '100%'
# c.zoom.levels = ['25%', '33%', '50%', '67%', '75%', '90%', '100%', '110%', '125%', '150%', '175%', '200%', '250%', '300%', '400%', '500%']
# c.zoom.mouse_divider = 512
# c.zoom.text_only = False

#==============================================================================
# Bindings for normal mode
#==============================================================================

# Swap H <-> J and K <-> L
config.bind('H', 'tab-prev')
config.bind('J', 'back')
config.bind('K', 'forward')
config.bind('L', 'tab-next')
config.bind('gh', 'tab-move -')
config.bind('gl', 'tab-move +')

# Toggle tab and status bars
config.bind('xt', 'config-cycle tabs.show multiple always never switching')
config.bind('xT', f'set tabs.show {c.tabs.show}')
config.bind('xb', 'config-cycle statusbar.show always never')
config.bind('xB', f'set statusbar.show {c.statusbar.show}')

# Tab creation
config.bind('<Ctrl-Shift-T>', 'open -t -r')

# Userscripts
config.bind(',pb', 'spawn --userscript bitwarden {url}')
config.bind(',pp', 'spawn --userscript bitwarden --password {url}')
config.bind(',pu', 'spawn --userscript bitwarden --username {url}')

# mpv
config.bind(',m', 'spawn mpv {url}')
config.bind(',M', 'hint links spawn mpv {hint-url}')

## Defaults
# config.bind("'", 'enter-mode jump_mark')
# config.bind('+', 'zoom-in')
# config.bind('-', 'zoom-out')
# config.bind('.', 'repeat-command')
# config.bind('/', 'set-cmd-text /')
# config.bind(':', 'set-cmd-text :')
# config.bind(';I', 'hint images tab')
# config.bind(';O', 'hint links fill :open -t -r {hint-url}')
# config.bind(';R', 'hint --rapid links window')
# config.bind(';Y', 'hint links yank-primary')
# config.bind(';b', 'hint all tab-bg')
# config.bind(';d', 'hint links download')
# config.bind(';f', 'hint all tab-fg')
# config.bind(';h', 'hint all hover')
# config.bind(';i', 'hint images')
# config.bind(';o', 'hint links fill :open {hint-url}')
# config.bind(';r', 'hint --rapid links tab-bg')
# config.bind(';t', 'hint inputs')
# config.bind(';y', 'hint links yank')
# config.bind('<Alt-1>', 'tab-focus 1')
# config.bind('<Alt-2>', 'tab-focus 2')
# config.bind('<Alt-3>', 'tab-focus 3')
# config.bind('<Alt-4>', 'tab-focus 4')
# config.bind('<Alt-5>', 'tab-focus 5')
# config.bind('<Alt-6>', 'tab-focus 6')
# config.bind('<Alt-7>', 'tab-focus 7')
# config.bind('<Alt-8>', 'tab-focus 8')
# config.bind('<Alt-9>', 'tab-focus -1')
# config.bind('<Alt-m>', 'tab-mute')
# config.bind('<Ctrl-A>', 'navigate increment')
# config.bind('<Ctrl-Alt-p>', 'print')
# config.bind('<Ctrl-B>', 'scroll-page 0 -1')
# config.bind('<Ctrl-D>', 'scroll-page 0 0.5')
# config.bind('<Ctrl-F5>', 'reload -f')
# config.bind('<Ctrl-F>', 'scroll-page 0 1')
# config.bind('<Ctrl-N>', 'open -w')
# config.bind('<Ctrl-PgDown>', 'tab-next')
# config.bind('<Ctrl-PgUp>', 'tab-prev')
# config.bind('<Ctrl-Q>', 'quit')
# config.bind('<Ctrl-Return>', 'follow-selected -t')
# config.bind('<Ctrl-Shift-N>', 'open -p')
# config.bind('<Ctrl-Shift-T>', 'undo')
# config.bind('<Ctrl-Shift-Tab>', 'nop')
# config.bind('<Ctrl-Shift-W>', 'close')
# config.bind('<Ctrl-T>', 'open -t')
# config.bind('<Ctrl-Tab>', 'tab-focus last')
# config.bind('<Ctrl-U>', 'scroll-page 0 -0.5')
# config.bind('<Ctrl-V>', 'enter-mode passthrough')
# config.bind('<Ctrl-W>', 'tab-close')
# config.bind('<Ctrl-X>', 'navigate decrement')
# config.bind('<Ctrl-^>', 'tab-focus last')
# config.bind('<Ctrl-h>', 'home')
# config.bind('<Ctrl-p>', 'tab-pin')
# config.bind('<Ctrl-s>', 'stop')
# config.bind('<Escape>', 'clear-keychain ;; search ;; fullscreen --leave')
# config.bind('<F11>', 'fullscreen')
# config.bind('<F5>', 'reload')
# config.bind('<Return>', 'follow-selected')
# config.bind('<back>', 'back')
# config.bind('<forward>', 'forward')
# config.bind('=', 'zoom')
# config.bind('?', 'set-cmd-text ?')
# config.bind('@', 'run-macro')
# config.bind('B', 'set-cmd-text -s :quickmark-load -t')
# config.bind('D', 'tab-close -o')
# config.bind('F', 'hint all tab')
# config.bind('G', 'scroll-to-perc')
# config.bind('H', 'back')
# config.bind('J', 'tab-next')
# config.bind('K', 'tab-prev')
# config.bind('L', 'forward')
# config.bind('M', 'bookmark-add')
config.unbind('M')
# config.bind('N', 'search-prev')
# config.bind('O', 'set-cmd-text -s :open -t')
# config.bind('PP', 'open -t -- {primary}')
# config.bind('Pp', 'open -t -- {clipboard}')
# config.bind('R', 'reload -f')
# config.bind('Sb', 'open qute://bookmarks#bookmarks')
# config.bind('Sh', 'open qute://history')
# config.bind('Sq', 'open qute://bookmarks')
# config.bind('Ss', 'open qute://settings')
# config.bind('T', 'tab-focus')
# config.bind('ZQ', 'quit')
# config.bind('ZZ', 'quit --save')
# config.bind('[[', 'navigate prev')
# config.bind(']]', 'navigate next')
# config.bind('`', 'enter-mode set_mark')
# config.bind('ad', 'download-cancel')
# config.bind('b', 'set-cmd-text -s :quickmark-load')
# config.bind('cd', 'download-clear')
# config.bind('co', 'tab-only')
# config.bind('d', 'tab-close')
# config.bind('f', 'hint')
# config.bind('g$', 'tab-focus -1')
# config.bind('g0', 'tab-focus 1')
# config.bind('gB', 'set-cmd-text -s :bookmark-load -t')
# config.bind('gC', 'tab-clone')
# config.bind('gD', 'tab-give')
# config.bind('gO', 'set-cmd-text :open -t -r {url:pretty}')
# config.bind('gU', 'navigate up -t')
# config.bind('g^', 'tab-focus 1')
# config.bind('ga', 'open -t')
# config.bind('gb', 'set-cmd-text -s :bookmark-load')
# config.bind('gd', 'download')
# config.bind('gf', 'view-source')
# config.bind('gg', 'scroll-to-perc 0')
# config.bind('gi', 'hint inputs --first')
# config.bind('gl', 'tab-move -')
# config.bind('gm', 'tab-move')
# config.bind('go', 'set-cmd-text :open {url:pretty}')
# config.bind('gr', 'tab-move +')
# config.bind('gt', 'set-cmd-text -s :buffer')
# config.bind('gu', 'navigate up')
# config.bind('h', 'scroll left')
# config.bind('i', 'enter-mode insert')
# config.bind('j', 'scroll down')
# config.bind('k', 'scroll up')
# config.bind('l', 'scroll right')
# config.bind('m', 'quickmark-save')
config.unbind('m')
# config.bind('n', 'search-next')
# config.bind('o', 'set-cmd-text -s :open')
# config.bind('pP', 'open -- {primary}')
# config.bind('pp', 'open -- {clipboard}')
# config.bind('q', 'record-macro')
# config.bind('r', 'reload')
# config.bind('sf', 'save')
# config.bind('sk', 'set-cmd-text -s :bind')
# config.bind('sl', 'set-cmd-text -s :set -t')
# config.bind('ss', 'set-cmd-text -s :set')
# config.bind('tIH', 'config-cycle -p -u *://*.{url:host}/* content.images ;; reload')
# config.bind('tIh', 'config-cycle -p -u *://{url:host}/* content.images ;; reload')
# config.bind('tIu', 'config-cycle -p -u {url} content.images ;; reload')
# config.bind('tPH', 'config-cycle -p -u *://*.{url:host}/* content.plugins ;; reload')
# config.bind('tPh', 'config-cycle -p -u *://{url:host}/* content.plugins ;; reload')
# config.bind('tPu', 'config-cycle -p -u {url} content.plugins ;; reload')
# config.bind('tSH', 'config-cycle -p -u *://*.{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tSh', 'config-cycle -p -u *://{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tSu', 'config-cycle -p -u {url} content.javascript.enabled ;; reload')
# config.bind('th', 'back -t')
# config.bind('tiH', 'config-cycle -p -t -u *://*.{url:host}/* content.images ;; reload')
# config.bind('tih', 'config-cycle -p -t -u *://{url:host}/* content.images ;; reload')
# config.bind('tiu', 'config-cycle -p -t -u {url} content.images ;; reload')
# config.bind('tl', 'forward -t')
# config.bind('tpH', 'config-cycle -p -t -u *://*.{url:host}/* content.plugins ;; reload')
# config.bind('tph', 'config-cycle -p -t -u *://{url:host}/* content.plugins ;; reload')
# config.bind('tpu', 'config-cycle -p -t -u {url} content.plugins ;; reload')
# config.bind('tsH', 'config-cycle -p -t -u *://*.{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tsh', 'config-cycle -p -t -u *://{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tsu', 'config-cycle -p -t -u {url} content.javascript.enabled ;; reload')
# config.bind('u', 'undo')
# config.bind('v', 'enter-mode caret')
# config.bind('wB', 'set-cmd-text -s :bookmark-load -w')
# config.bind('wO', 'set-cmd-text :open -w {url:pretty}')
# config.bind('wP', 'open -w -- {primary}')
# config.bind('wb', 'set-cmd-text -s :quickmark-load -w')
# config.bind('wf', 'hint all window')
# config.bind('wh', 'back -w')
# config.bind('wi', 'inspector')
# config.bind('wl', 'forward -w')
# config.bind('wo', 'set-cmd-text -s :open -w')
# config.bind('wp', 'open -w -- {clipboard}')
# config.bind('xO', 'set-cmd-text :open -b -r {url:pretty}')
# config.bind('xo', 'set-cmd-text -s :open -b')
# config.bind('yD', 'yank domain -s')
# config.bind('yP', 'yank pretty-url -s')
# config.bind('yT', 'yank title -s')
# config.bind('yY', 'yank -s')
# config.bind('yd', 'yank domain')
# config.bind('yp', 'yank pretty-url')
# config.bind('yt', 'yank title')
# config.bind('yy', 'yank')
# config.bind('{{ `{{` }}', 'navigate prev -t')
# config.bind('{{ `}}` }}', 'navigate next -t')

#==============================================================================
# Bindings for caret mode
#==============================================================================

## Defaults
# config.bind('$', 'move-to-end-of-line', mode='caret')
# config.bind('0', 'move-to-start-of-line', mode='caret')
# config.bind('<Ctrl-Space>', 'drop-selection', mode='caret')
# config.bind('<Escape>', 'leave-mode', mode='caret')
# config.bind('<Return>', 'yank selection', mode='caret')
# config.bind('<Space>', 'toggle-selection', mode='caret')
# config.bind('G', 'move-to-end-of-document', mode='caret')
# config.bind('H', 'scroll left', mode='caret')
# config.bind('J', 'scroll down', mode='caret')
# config.bind('K', 'scroll up', mode='caret')
# config.bind('L', 'scroll right', mode='caret')
# config.bind('Y', 'yank selection -s', mode='caret')
# config.bind('[', 'move-to-start-of-prev-block', mode='caret')
# config.bind(']', 'move-to-start-of-next-block', mode='caret')
# config.bind('b', 'move-to-prev-word', mode='caret')
# config.bind('c', 'enter-mode normal', mode='caret')
# config.bind('e', 'move-to-end-of-word', mode='caret')
# config.bind('gg', 'move-to-start-of-document', mode='caret')
# config.bind('h', 'move-to-prev-char', mode='caret')
# config.bind('j', 'move-to-next-line', mode='caret')
# config.bind('k', 'move-to-prev-line', mode='caret')
# config.bind('l', 'move-to-next-char', mode='caret')
# config.bind('v', 'toggle-selection', mode='caret')
# config.bind('w', 'move-to-next-word', mode='caret')
# config.bind('y', 'yank selection', mode='caret')
# config.bind('{', 'move-to-end-of-prev-block', mode='caret')
# config.bind('}', 'move-to-end-of-next-block', mode='caret')

#==============================================================================
# Bindings for command mode
#==============================================================================

## Defaults
# config.bind('<Alt-B>', 'rl-backward-word', mode='command')
# config.bind('<Alt-Backspace>', 'rl-backward-kill-word', mode='command')
# config.bind('<Alt-D>', 'rl-kill-word', mode='command')
# config.bind('<Alt-F>', 'rl-forward-word', mode='command')
# config.bind('<Ctrl-?>', 'rl-delete-char', mode='command')
# config.bind('<Ctrl-A>', 'rl-beginning-of-line', mode='command')
# config.bind('<Ctrl-B>', 'rl-backward-char', mode='command')
# config.bind('<Ctrl-C>', 'completion-item-yank', mode='command')
# config.bind('<Ctrl-D>', 'completion-item-del', mode='command')
# config.bind('<Ctrl-E>', 'rl-end-of-line', mode='command')
# config.bind('<Ctrl-F>', 'rl-forward-char', mode='command')
# config.bind('<Ctrl-H>', 'rl-backward-delete-char', mode='command')
# config.bind('<Ctrl-K>', 'rl-kill-line', mode='command')
# config.bind('<Ctrl-N>', 'command-history-next', mode='command')
# config.bind('<Ctrl-P>', 'command-history-prev', mode='command')
# config.bind('<Ctrl-Return>', 'command-accept --rapid', mode='command')
# config.bind('<Ctrl-Shift-C>', 'completion-item-yank --sel', mode='command')
# config.bind('<Ctrl-Shift-Tab>', 'completion-item-focus prev-category', mode='command')
# config.bind('<Ctrl-Tab>', 'completion-item-focus next-category', mode='command')
# config.bind('<Ctrl-U>', 'rl-unix-line-discard', mode='command')
# config.bind('<Ctrl-W>', 'rl-unix-word-rubout', mode='command')
# config.bind('<Ctrl-Y>', 'rl-yank', mode='command')
# config.bind('<Down>', 'completion-item-focus --history next', mode='command')
# config.bind('<Escape>', 'leave-mode', mode='command')
# config.bind('<Return>', 'command-accept', mode='command')
# config.bind('<Shift-Delete>', 'completion-item-del', mode='command')
# config.bind('<Shift-Tab>', 'completion-item-focus prev', mode='command')
# config.bind('<Tab>', 'completion-item-focus next', mode='command')
# config.bind('<Up>', 'completion-item-focus --history prev', mode='command')

#==============================================================================
# Bindings for hint mode
#==============================================================================

## Defaults
# config.bind('<Ctrl-B>', 'hint all tab-bg', mode='hint')
# config.bind('<Ctrl-F>', 'hint links', mode='hint')
# config.bind('<Ctrl-R>', 'hint --rapid links tab-bg', mode='hint')
# config.bind('<Escape>', 'leave-mode', mode='hint')
# config.bind('<Return>', 'follow-hint', mode='hint')

#==============================================================================
# Bindings for insert mode
#==============================================================================

## Defaults
# config.bind('<Ctrl-E>', 'open-editor', mode='insert')
# config.bind('<Escape>', 'leave-mode', mode='insert')
# config.bind('<Shift-Ins>', 'insert-text {primary}', mode='insert')

#==============================================================================
# Bindings for passthrough mode
#==============================================================================

## Defaults
# config.bind('<Shift-Escape>', 'leave-mode', mode='passthrough')

#==============================================================================
# Bindings for prompt mode
#==============================================================================

## Defaults
# config.bind('<Alt-B>', 'rl-backward-word', mode='prompt')
# config.bind('<Alt-Backspace>', 'rl-backward-kill-word', mode='prompt')
# config.bind('<Alt-D>', 'rl-kill-word', mode='prompt')
# config.bind('<Alt-F>', 'rl-forward-word', mode='prompt')
# config.bind('<Alt-Shift-Y>', 'prompt-yank --sel', mode='prompt')
# config.bind('<Alt-Y>', 'prompt-yank', mode='prompt')
# config.bind('<Ctrl-?>', 'rl-delete-char', mode='prompt')
# config.bind('<Ctrl-A>', 'rl-beginning-of-line', mode='prompt')
# config.bind('<Ctrl-B>', 'rl-backward-char', mode='prompt')
# config.bind('<Ctrl-E>', 'rl-end-of-line', mode='prompt')
# config.bind('<Ctrl-F>', 'rl-forward-char', mode='prompt')
# config.bind('<Ctrl-H>', 'rl-backward-delete-char', mode='prompt')
# config.bind('<Ctrl-K>', 'rl-kill-line', mode='prompt')
# config.bind('<Ctrl-P>', 'prompt-open-download --pdfjs', mode='prompt')
# config.bind('<Ctrl-U>', 'rl-unix-line-discard', mode='prompt')
# config.bind('<Ctrl-W>', 'rl-unix-word-rubout', mode='prompt')
# config.bind('<Ctrl-X>', 'prompt-open-download', mode='prompt')
# config.bind('<Ctrl-Y>', 'rl-yank', mode='prompt')
# config.bind('<Down>', 'prompt-item-focus next', mode='prompt')
# config.bind('<Escape>', 'leave-mode', mode='prompt')
# config.bind('<Return>', 'prompt-accept', mode='prompt')
# config.bind('<Shift-Tab>', 'prompt-item-focus prev', mode='prompt')
# config.bind('<Tab>', 'prompt-item-focus next', mode='prompt')
# config.bind('<Up>', 'prompt-item-focus prev', mode='prompt')

#==============================================================================
# Bindings for register mode
#==============================================================================

## Defaults
# config.bind('<Escape>', 'leave-mode', mode='register')

#==============================================================================
# Bindings for yesno mode
#==============================================================================

## Defaults
# config.bind('<Alt-Shift-Y>', 'prompt-yank --sel', mode='yesno')
# config.bind('<Alt-Y>', 'prompt-yank', mode='yesno')
# config.bind('<Escape>', 'leave-mode', mode='yesno')
# config.bind('<Return>', 'prompt-accept', mode='yesno')
# config.bind('n', 'prompt-accept no', mode='yesno')
# config.bind('y', 'prompt-accept yes', mode='yesno')
