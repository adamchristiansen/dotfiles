# This document keeps the same order of fields as the default matplotlibrc for
# ease of comparison.

#==============================================================================
# Backends
#==============================================================================

# backend:                Agg
# webagg.port:            8988
# webagg.address:         127.0.0.1
# webagg.port_retries:    50
# webagg.open_in_browser: True
# backend_fallback:       True
# interactive:            False
# figure.hooks:           # list of dotted.module.name:dotted.callable.name
# toolbar:                toolbar2 # {None, toolbar2, toolmanager}
# timezone:               UTC      # a pytz timezone string, e.g., US/Central

#==============================================================================
# Lines
#==============================================================================

# https://matplotlib.org/stable/api/artist_api.html#module-matplotlib.lines

# lines.linewidth:       1.5   # line width in points
# lines.linestyle:       solid # solid line
# lines.color:           C0    # has no affect on plot(); see axes.prop_cycle
# lines.marker:          None  # the default marker
# lines.markerfacecolor: auto  # the default marker face color
# lines.markeredgecolor: auto  # the default marker edge color
# lines.markeredgewidth: 1.0   # the line width around the marker symbol
# lines.markersize:      6     # marker size, in points
lines.dash_joinstyle:  round # {miter, round, bevel}
lines.dash_capstyle:   round # {butt, round, projecting}
lines.solid_joinstyle: round # {miter, round, bevel}
lines.solid_capstyle:  round # {butt, round, projecting}
# lines.antialiased:     True  # render lines in antialiased (no jaggies)

# lines.dashed_pattern:  3.7, 1.6
# lines.dashdot_pattern: 6.4, 1.6, 1, 1.6
# lines.dotted_pattern:  1, 1.65
# lines.scale_dashes:    True # Scale pattern by linewidth

# markers.fillstyle: full # {full, left, right, bottom, top, none}

# pcolor.shading: auto
# pcolormesh.snap: True

#==============================================================================
# Patches
#==============================================================================

# https://matplotlib.org/stable/api/artist_api.html#module-matplotlib.patches

# patch.linewidth:       1.0    # edge width in points.
# patch.facecolor:       C0
# patch.edgecolor:       black  # if forced, or patch is not filled
# patch.force_edgecolor: False  # True to always use edgecolor
# patch.antialiased:     True   # render patches in antialiased (no jaggies)

#==============================================================================
# Hatches
#==============================================================================

# hatch.color:     black
# hatch.linewidth: 1.0

#==============================================================================
# Box Plot
#==============================================================================

# boxplot.notch:       False
# boxplot.vertical:    True
# boxplot.whiskers:    1.5
# boxplot.bootstrap:   None
# boxplot.patchartist: False
# boxplot.showmeans:   False
# boxplot.showcaps:    True
# boxplot.showbox:     True
# boxplot.showfliers:  True
# boxplot.meanline:    False

# boxplot.flierprops.color:           black
# boxplot.flierprops.marker:          o
# boxplot.flierprops.markerfacecolor: none
# boxplot.flierprops.markeredgecolor: black
# boxplot.flierprops.markeredgewidth: 1.0
# boxplot.flierprops.markersize:      6
# boxplot.flierprops.linestyle:       none
# boxplot.flierprops.linewidth:       1.0

# boxplot.boxprops.color:     black
# boxplot.boxprops.linewidth: 1.0
# boxplot.boxprops.linestyle: solid

# boxplot.whiskerprops.color:     black
# boxplot.whiskerprops.linewidth: 1.0
# boxplot.whiskerprops.linestyle: solid

# boxplot.capprops.color:     black
# boxplot.capprops.linewidth: 1.0
# boxplot.capprops.linestyle: solid

# boxplot.medianprops.color:     C1
# boxplot.medianprops.linewidth: 1.0
# boxplot.medianprops.linestyle: -

# boxplot.meanprops.color:           C2
# boxplot.meanprops.marker:          ^
# boxplot.meanprops.markerfacecolor: C2
# boxplot.meanprops.markeredgecolor: C2
# boxplot.meanprops.markersize:       6
# boxplot.meanprops.linestyle:       dashed
# boxplot.meanprops.linewidth:       1.0

#==============================================================================
# Font
#==============================================================================

# https://matplotlib.org/stable/api/font_manager_api.html

font.family:  serif
# font.style:   normal
# font.variant: normal
# font.weight:  normal
# font.stretch: normal
# font.size:    10.0 # pt

font.serif:      cm, DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
# font.sans-serif: DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif
# font.cursive:    Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, Comic Neue, Comic Sans MS, cursive
# font.fantasy:    Chicago, Charcoal, Impact, Western, xkcd script, fantasy
# font.monospace:  DejaVu Sans Mono, Bitstream Vera Sans Mono, Computer Modern Typewriter, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace

#==============================================================================
# Text
#==============================================================================

# https://matplotlib.org/stable/api/artist_api.html#module-matplotlib.text

# text.color: black
# text.hinting: force_autohint
# text.hinting_factor: 8
# text.kerning_factor: 0
# text.antialiased: True
# text.parse_math: True

#==============================================================================
# LaTeX
#==============================================================================

# https://matplotlib.org/stable/users/explain/text/usetex.html

# text.usetex: False  # use latex for all text handling
# text.latex.preamble: # Empty, not supported

# The following settings allow you to select the fonts in math mode.
# Should be 'dejavusans' (default), 'dejavuserif', 'cm' (Computer Modern),
# 'stix', 'stixsans' or 'custom'
mathtext.fontset: cm
## "mathtext.fontset: custom" is defined by the mathtext.bf, .cal, .it, ...
## settings which map a TeX font name to a fontconfig font pattern.  (These
## settings are not used for other font sets.)
#mathtext.bf:  sans:bold
#mathtext.bfit: sans:italic:bold
#mathtext.cal: cursive
#mathtext.it:  sans:italic
#mathtext.rm:  sans
#mathtext.sf:  sans
#mathtext.tt:  monospace
#mathtext.fallback: cm  # Select fallback font from ['cm' (Computer Modern), 'stix'
                        # 'stixsans'] when a symbol cannot be found in one of the
                        # custom math fonts. Select 'None' to not perform fallback
                        # and replace the missing character by a dummy symbol.
#mathtext.default: it  # The default font to use for math.
                       # Can be any of the LaTeX font names, including
                       # the special name "regular" for the same font
                       # used in regular text.

#==============================================================================
# Axes
#==============================================================================

# https://matplotlib.org/stable/api/axes_api.html#module-matplotlib.axes

# axes.facecolor:     white   # axes background color
# axes.edgecolor:     black   # axes edge color
# axes.linewidth:     0.8     # edge line width
axes.grid:          True   # display grid or not
# axes.grid.axis:     both    # which axis the grid should apply to
# axes.grid.which:    major   # grid lines at {major, minor, both} ticks
# axes.titlelocation: center  # alignment of the title: {left, right, center}
# axes.titlesize:     large   # font size of the axes title
# axes.titleweight:   normal  # font weight of title
# axes.titlecolor:    auto    # auto falls back to text.color
# axes.titley:        None    # position title (axes relative units). None implies auto
# axes.titlepad:      6.0     # pad between axes and title in points
# axes.labelsize:     medium  # font size of the x and y labels
# axes.labelpad:      4.0     # space between label and axis
# axes.labelweight:   normal  # weight of the x and y labels
# axes.labelcolor:    black
# axes.axisbelow:     line    # zorder to draw axis gridlines and ticks

# axes.formatter.limits: -5, 6  # use scientific notation limits
# axes.formatter.use_locale: False # do not use locale for tick formatting
# axes.formatter.use_mathtext: False # When True, use mathtext for scientific notation
# axes.formatter.min_exponent: 0 # minimum exponent to format in scientific notation
# axes.formatter.useoffset: True  # If True, the tick label formatter
                                 # will default to labeling ticks relative
                                 # to an offset when the data range is
                                 # small compared to the minimum absolute
                                 # value of the data.
# axes.formatter.offset_threshold: 4  # When useoffset is True, the offset
                                     # will be used when it can remove
                                     # at least this number of significant
                                     # digits from tick labels.

# axes.spines.left:   True # display axis spines
# axes.spines.bottom: True
# axes.spines.top:    True
# axes.spines.right:  True

# axes.unicode_minus: True # use Unicode for the minus symbol rather than hyphen
# axes.prop_cycle:    cycler('color', ['1f77b4', 'ff7f0e', '2ca02c', 'd62728', '9467bd', '8c564b', 'e377c2', '7f7f7f', 'bcbd22', '17becf'])
# axes.xmargin:       0..05  # x margin
# axes.ymargin:       0..05  # y margin
# axes.zmargin:       0..05  # z margin
# axes.autolimit_mode: data  # use axes.xmargin and axes.ymargin as is.

# polaraxes.grid: True # display grid on polar axes
# axes3d.grid:    True # display grid on 3D axes

# axes3d.xaxis.panecolor: (0.95, 0.95, 0.95, 0.5) # background pane on 3D axes
# axes3d.yaxis.panecolor: (0.90, 0.90, 0.90, 0.5) # background pane on 3D axes
# axes3d.zaxis.panecolor: (0.925, 0.925, 0.925, 0.5) # background pane on 3D axes

#==============================================================================
# Axis
#==============================================================================

xaxis.labellocation: center # alignment of the xaxis label: {left, right, center}
yaxis.labellocation: center # alignment of the yaxis label: {bottom, top, center}

#==============================================================================
# Dates
#==============================================================================

# date.autoformatter.year:        %Y
# date.autoformatter.month:       %Y-%m
# date.autoformatter.day:         %Y-%m-%d
# date.autoformatter.hour:        %m-%d %H
# date.autoformatter.minute:      %d %H:%M
# date.autoformatter.second:      %H:%M:%S
# date.autoformatter.microsecond: %M:%S.%f
# date.epoch:                     1970-01-01T00:00:00
# date.converter:                 auto
# date.interval_multiples:        True

#==============================================================================
# Ticks
#==============================================================================

# See https://matplotlib.org/stable/api/axis_api.html#matplotlib.axis.Tick

# xtick.top:           False   # draw ticks on the top side
# xtick.bottom:        True    # draw ticks on the bottom side
# xtick.labeltop:      False   # draw label on the top
# xtick.labelbottom:   True    # draw label on the bottom
# xtick.major.size:    3.5     # major tick size in points
# xtick.minor.size:    2       # minor tick size in points
# xtick.major.width:   0.8     # major tick width in points
# xtick.minor.width:   0.6     # minor tick width in points
# xtick.major.pad:     3.5     # distance to major tick label in points
# xtick.minor.pad:     3.4     # distance to the minor tick label in points
# xtick.color:         black   # color of the ticks
# xtick.labelcolor:    inherit # color of the tick labels or inherit from xtick.color
# xtick.labelsize:     medium  # font size of the tick labels
xtick.direction:     in     # direction: {in, out, inout}
# xtick.minor.visible: False   # visibility of minor ticks on x-axis
# xtick.major.top:     True    # draw x axis top major ticks
# xtick.major.bottom:  True    # draw x axis bottom major ticks
# xtick.minor.top:     True    # draw x axis top minor ticks
# xtick.minor.bottom:  True    # draw x axis bottom minor ticks
# xtick.minor.ndivs:   auto    # number of minor ticks between the major ticks on x-axis
# xtick.alignment:     center  # alignment of xticks

# ytick.left:          True    # draw ticks on the left side
# ytick.right:         False   # draw ticks on the right side
# ytick.labelleft:     True    # draw tick labels on the left side
# ytick.labelright:    False   # draw tick labels on the right side
# ytick.major.size:    3.5     # major tick size in points
# ytick.minor.size:    2       # minor tick size in points
# ytick.major.width:   0.8     # major tick width in points
# ytick.minor.width:   0.6     # minor tick width in points
# ytick.major.pad:     3.5     # distance to major tick label in points
# ytick.minor.pad:     3.4     # distance to the minor tick label in points
# ytick.color:         black   # color of the ticks
# ytick.labelcolor:    inherit # color of the tick labels or inherit from ytick.color
# ytick.labelsize:     medium  # font size of the tick labels
ytick.direction:     in     # direction: {in, out, inout}
# ytick.minor.visible: False   # visibility of minor ticks on y-axis
# ytick.major.left:    True    # draw y axis left major ticks
# ytick.major.right:   True    # draw y axis right major ticks
# ytick.minor.left:    True    # draw y axis left minor ticks
# ytick.minor.right:   True    # draw y axis right minor ticks
# ytick.minor.ndivs:   auto    # number of minor ticks between the major ticks on y-axis
# ytick.alignment:     center_baseline  # alignment of yticks

#==============================================================================
# Grid
#==============================================================================

# grid.color:     "#b0b0b0"
# grid.linestyle: solid
# grid.linewidth: 0.8
# grid.alpha:     1.0

#==============================================================================
# Legend
#==============================================================================

legend.loc:            upper right
# legend.frameon:        True    # draw the legend on a background patch
legend.framealpha:     1.0     # legend patch transparency
legend.facecolor:      inherit # inherit from axes.facecolor; or color spec
legend.edgecolor:      0.8     # background patch boundary color
legend.fancybox:       False   # True: rounded box, False: rectangle
legend.shadow:         False   # if True, give background a shadow effect
legend.numpoints:      1       # number of marker points in the legend line
legend.scatterpoints:  1       # number of scatter points
legend.markerscale:    1.0     # the relative size of legend markers
legend.fontsize:       medium
legend.labelcolor:     None
legend.title_fontsize: None    # None sets to the same as the default axes

# Dimensions as fraction of font size.
legend.borderpad:     0.6  # border whitespace
legend.labelspacing:  0.5  # the vertical space between the legend entries
legend.handlelength:  2.0  # the length of the legend lines
legend.handleheight:  0.7  # the height of the legend handle
legend.handletextpad: 0.8  # the space between the legend line and legend text
legend.borderaxespad: 0.6  # the border between the axes and legend edge
legend.columnspacing: 2.0  # column separation

#==============================================================================
# Figure
#==============================================================================

# See https://matplotlib.org/stable/api/figure_api.html#matplotlib.figure.Figure

# figure.titlesize:   large     # size of the figure title (``Figure.suptitle()``)
# figure.titleweight: normal    # weight of the figure title
# figure.labelsize:   large     # size of the figure label (``Figure.sup[x|y]label()``)
# figure.labelweight: normal    # weight of the figure label
# figure.figsize:     6.4, 4.8  # figure size in inches
# figure.dpi:         100       # figure dots per inch
# figure.facecolor:   white     # figure face color
# figure.edgecolor:   white     # figure edge color
# figure.frameon:     True      # enable figure frame
# figure.max_open_warning: 20   # The maximum number of figures to open through
                                # the pyplot interface before emitting a warning.
                                # If less than one this feature is disabled.
# figure.raise_window : True    # Raise the GUI window to front when show() is called.

# The figure subplot parameters.
# All dimensions are a fraction of the figure width and height.
# figure.subplot.left:   0.125 # the left side of the subplots of the figure
# figure.subplot.right:  0.900 # the right side of the subplots of the figure
# figure.subplot.bottom: 0.110 # the bottom of the subplots of the figure
# figure.subplot.top:    0.880 # the top of the subplots of the figure
# figure.subplot.wspace: 0.200 # the amount of width reserved for space between subplots,
                               # expressed as a fraction of the average axis width
# figure.subplot.hspace: 0.200 # the amount of height reserved for space between subplots,
                               # expressed as a fraction of the average axis height

# Figure layout
# figure.autolayout: False             # When True, automatically apply `tight_layout`
# figure.constrained_layout.use: False # When True, automatically make plot elements fit on the figure.

# Padding (in inches) around axes; defaults to 3/72 inches, i.e. 3 points.
# figure.constrained_layout.h_pad:  0.04167
# figure.constrained_layout.w_pad:  0.04167

# Spacing between subplots, relative to the subplot sizes. Much smaller than for
# tight_layout (figure.subplot.hspace, figure.subplot.wspace) as constrained_layout
# already takes surrounding texts (titles, labels, # ticklabels) into account.
# figure.constrained_layout.hspace: 0.02
# figure.constrained_layout.wspace: 0.02

#==============================================================================
# Images
#==============================================================================

# image.aspect:          equal        # {equal, auto} or a number
# image.interpolation:   antialiased  # see help(imshow) for options
# image.cmap:            viridis      # A colormap name (plasma, magma, etc.)
# image.lut:             256          # the size of the colormap lookup table
# image.origin:          upper        # {lower, upper}
# image.resample:        True
# image.composite_image: True

#==============================================================================
# Contour Plots
#==============================================================================

# contour.negative_linestyle: dashed  # string or on-off ink sequence
# contour.corner_mask:        True    # {True, False}
# contour.linewidth:          None    # {float, None} Size of the contour line
                                      # widths. If set to None, it falls back to
                                      # `line.linewidth`.
# contour.algorithm:          mpl2014 # {mpl2005, mpl2014, serial, threaded}

#==============================================================================
# Errorbar Plots
#==============================================================================

# errorbar.capsize: 0 # length of end cap on error bars in pixels


#==============================================================================
# Histogram Plots
#==============================================================================

# hist.bins: 10 # The default number of histogram bins or 'auto'.

#==============================================================================
# Scatter Plots
#==============================================================================

# scatter.marker: o         # The default marker type for scatter plots.
# scatter.edgecolors: face  # The default edge colors for scatter plots.

#==============================================================================
# Agg Rendering
#==============================================================================

# Warning: experimental, 2008/10/10
# agg.path.chunksize: 0 # 0 to disable; values in the range
                        # 10000 to 100000 can improve speed slightly
                        # and prevent an Agg rendering failure
                        # when plotting very large data sets,
                        # especially if they are very gappy.
                        # It may cause minor artifacts, though.
                        # A value of 20000 is probably a good
                        # starting point.

#==============================================================================
# Paths
#==============================================================================

# path.simplify: True
# path.simplify_threshold: 0.111111111111
# path.snap: True
# path.sketch: None
# path.effects: # Empty

#==============================================================================
# Saving Figures
#==============================================================================

## The default savefig parameters can be different from the display parameters
## e.g., use a higher resolution, make the figure background white, etc.

savefig.dpi:       300          # figure dots per inch or 'figure'
# savefig.facecolor: auto       # figure face color when saving
# savefig.edgecolor: auto       # figure edge color when saving
# savefig.format:    png        # {png, ps, pdf, svg}
# savefig.bbox:      standard   # {tight, standard} (use standard for generating animation frames)
# savefig.pad_inches:  0.1      # padding to be used, when bbox is set to 'tight'
# savefig.directory:   ~        # default directory in savefig dialog
# savefig.transparent: False    # whether saving with transparent background is default
# savefig.orientation: portrait # orientation of saved figure (PostScript output)

# macOS backend params
# macosx.window_mode: system

# tk backend params
# tk.window_focus: False # Maintain shell focus for TkAgg

# ps backend params
# ps.papersize:     letter # {figure, letter, legal, ledger, A0-A10, B0-B10}
# ps.useafm:        False  # use AFM fonts, results in small files
# ps.usedistiller:  False  # {ghostscript, xpdf, None}
# ps.distiller.res: 6000   # dpi
# ps.fonttype:      3      # Output Type 3 (Type3) or Type 42 (TrueType)

# PDF backend params
# pdf.compression:    6 # integer from 0 to 9 (0 disables compression)
# pdf.fonttype:       3 # Output Type 3 (Type3) or Type 42 (TrueType)
# pdf.use14corefonts: False
# pdf.inheritcolor:   False

# SVG backend params
# svg.image_inline: True # Write raster image data directly into the SVG file
# svg.fonttype: path     # How to handle SVG fonts
# svg.hashsalt: None     # If not None, use this string as hash salt instead of uuid4

# pgf parameter
# https://matplotlib.org/stable/tutorials/text/pgf.html
# pgf.rcfonts:   True
# pgf.preamble:  # See text.latex.preamble for documentation
# pgf.texsystem: xelatex

# docstring params
# docstring.hardcopy: False # set this to generate hardcopy docstring

#==============================================================================
# Interactive Keymaps
#==============================================================================

# https://matplotlib.org/stable/users/explain/interactive.html

keymap.fullscreen:            # toggling
keymap.home: h, r             # home or reset mnemonic
keymap.back: left             # forward / backward keys
keymap.forward: right         # for quick navigation
keymap.pan: p                 # pan mnemonic
keymap.zoom: z                # zoom mnemonic
keymap.save: s, ctrl+s, cmd+s # saving current figure
keymap.help: h                # display help about active tools
keymap.quit: ctrl+w, cmd+w, q # close the current figure
keymap.quit_all:              # close all figures
keymap.grid: g                # switching on/off major grids in current axes
keymap.grid_minor: G          # switching on/off minor grids in current axes
keymap.yscale: y              # toggle scaling of y-axes ('log'/'linear')
keymap.xscale: x              # toggle scaling of x-axes ('log'/'linear')
keymap.copy: ctrl+c, cmd+c    # copy figure to clipboard

#==============================================================================
# Animation
#==============================================================================

# animation.html:         none   # How to display the animation as HTML in the IPython notebook
# animation.writer:       ffmpeg # MovieWriter 'backend' to use
# animation.codec:        h264   # Codec to use for writing movie
# animation.bitrate:      -1     # Controls size/quality trade-off (-1: auto-determine)
# animation.frame_format: png    # Controls frame format used by temp files

# Path to ffmpeg binary. Unqualified paths are resolved by subprocess.Popen.
# animation.ffmpeg_path: ffmpeg
# animation.ffmpeg_args: # additional arguments to pass to ffmpeg.

# Path to ImageMagick's convert binary. Unqualified paths are resolved by
# subprocess.Popen, except that on Windows, we look up an install of
# ImageMagick in the registry (as convert is also the name of a system tool).
# animation.convert_path: convert
# animation.convert_args: -layers, OptimizePlus # additional arguments to pass to convert
# animation.embed_limit:  20.0 # limit, in MB, of size of base64 encoded
                               # animation in HTML (i.e. IPython notebook)
