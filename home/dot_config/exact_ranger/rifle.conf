# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   env <variable> | The environment variable "variable" is non-empty
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | A graphical environment is available (darwin, Xorg, or Wayland)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.

#-------------------------------------------
# Websites
#-------------------------------------------
label open, ext x?html?, has qutebrowser, X, flag f = qutebrowser -- "$@"
label open, ext x?html?, has firefox,     X, flag f = firefox -- "$@"
label open, ext x?html?, has xdg-open,    X, flag f = xdg-open -- "$@"
label open, ext x?html?, has open,        X, flag f = open -- "$@"

label open, ext x?html?, has w3m, terminal = w3m "$@"


#-------------------------------------------
# Text
#-------------------------------------------
label open, ext 1 = man "$1"

label editor, mime ^text = ${VISUAL:-$EDITOR} -- "$@"
label pager,  mime ^text = "$PAGER" -- "$@"

label editor, mime empty$ = ${VISUAL:-$EDITOR} -- "$@"
label pager,  mime empty$ = "$PAGER" -- "$@"

#--------------------------------------------
# Video/Audio
#-------------------------------------------
label open, mime ^video, has mpv,      X, flag f = mpv -- "$@"
label open, mime ^video, has xdg-open, X, flag f = xdg-open -- "$@"
label open, mime ^video, has open,     X, flag f = open -- "$@"

label open, mime ^audio|ogg$, terminal, has mpv = mpv -- "$@"
label open, mime ^video,      terminal, has mpv = mpv -- "$@"

#-------------------------------------------
# Documents
#-------------------------------------------
label open, ext pdf, has zathura,  X, flag f = zathura -- "$@"
label open, ext pdf, has mupdf,    X, flag f = mupdf "$@"
label open, ext pdf, has xdg-open, X, flag f = xdg-open -- "$@"
label open, ext pdf, has open,     X, flag f = open -- "$@"

label open, ext cbr,  has zathura, X, flag f = zathura -- "$@"
label open, ext cbz,  has zathura, X, flag f = zathura -- "$@"
label open, ext djvu, has zathura, X, flag f = zathura -- "$@"
label open, ext epub, has zathura, X, flag f = zathura -- "$@"

label open, ext docx?|gnm|gnumeric|od[dfgpst]|pptx?|sxc|xlsx?|xlt|xlw, has libreoffice, X, flag f = libreoffice "$@"
label open, ext docx?|gnm|gnumeric|od[dfgpst]|pptx?|sxc|xlsx?|xlt|xlw, has xdg-open,    X, flag f = xdg-open -- "$@"
label open, ext docx?|gnm|gnumeric|od[dfgpst]|pptx?|sxc|xlsx?|xlt|xlw, has open,        X, flag f = open -- "$@"

#-------------------------------------------
# Images
#-------------------------------------------
label open, mime ^image/svg, has inkscape, X, flag f = inkscape -- "$@"
label open, mime ^image/svg, has display,  X, flag f = display -- "$@"
label open, mime ^image/svg, has xdg-open, X, flag f = xdg-open -- "$@"
label open, mime ^image/svg, has open,     X, flag f = open -- "$@"

label open, mime ^image, has imv,       X, flag f = imv -- "$@"
label open, mime ^image, has pqiv,      X, flag f = pqiv -- "$@"
label open, mime ^image, has sxiv,      X, flag f = sxiv -- "$@"
label open, mime ^image, has feh,       X, flag f = feh -- "$@"
label open, mime ^image, has mirage,    X, flag f = mirage -- "$@"
label open, mime ^image, has ristretto, X, flag f = ristretto "$@"
label open, mime ^image, has eog,       X, flag f = eog -- "$@"
label open, mime ^image, has eom,       X, flag f = eom -- "$@"
label open, mime ^image, has nomacs,    X, flag f = nomacs -- "$@"
label open, mime ^image, has geeqie,    X, flag f = geeqie -- "$@"
label open, mime ^image, has gpicview,  X, flag f = gpicview -- "$@"
label open, mime ^image, has gwenview,  X, flag f = gwenview -- "$@"
label open, mime ^image, has xdg-open,  X, flag f = xdg-open -- "$@"
label open, mime ^image, has open,      S, flag f = open -- "$@"

label open, ext xcf, has gimp, X, flag f = gimp -- "$@"

#-------------------------------------------
# Archives
#-------------------------------------------
label pager,   ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz|iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | "$PAGER"
label extract, ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz|iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"

label pager,   ext tar|gz|bz2|xz, has tar = tar vvtf "$1" | "$PAGER"
label extract, ext tar|gz|bz2|xz, has tar = for file in "$@"; do tar vvxf "$file"; done
label pager,   ext zip, has unzip         = unzip -l "$1" | "$PAGER"
label extract, ext zip, has unzip         = for file in "$@"; do unzip -d "${file%.*}" "$file"; done
label pager,   ext ace, has unace         = unace l "$1" | "$PAGER"
label extract, ext ace, has unace         = for file in "$@"; do unace e "$file"; done
label pager,   ext rar, has unrar         = unrar l "$1" | "$PAGER"
label extract, ext rar, has unrar         = for file in "$@"; do unrar x "$file"; done

#-------------------------------------------
# Flag t fallback terminals
#-------------------------------------------
# Rarely installed terminal emulators get higher priority; It is assumed that
# if you install a rare terminal emulator, you probably use it.
# gnome-terminal/konsole/xterm on the other hand are often installed as part of
# a desktop environment or as fallback terminal emulators.
mime ^ranger/x-terminal-emulator, has alacritty         = alacritty -e "$@"
mime ^ranger/x-terminal-emulator, has urxvt             = urxvt -e "$@"
mime ^ranger/x-terminal-emulator, has pantheon-terminal = pantheon-terminal -e "$@"
mime ^ranger/x-terminal-emulator, has lxterminal        = lxterminal -e "$@"
mime ^ranger/x-terminal-emulator, has mate-terminal     = mate-terminal -x "$@"
mime ^ranger/x-terminal-emulator, has xfce4-terminal    = xfce4-terminal -x "$@"
mime ^ranger/x-terminal-emulator, has konsole           = konsole -e "$@"
mime ^ranger/x-terminal-emulator, has gnome-terminal    = gnome-terminal -- "$@"
mime ^ranger/x-terminal-emulator, has xterm             = xterm -e "$@"

#-------------------------------------------
# Generic file openers
#-------------------------------------------
# If there is nothing else found, treat it as a text file
label editor, !mime ^text = ${VISUAL:-$EDITOR} -- "$@"
label pager,  !mime ^text = "$PAGER" -- "$@"
