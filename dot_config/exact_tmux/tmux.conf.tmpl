{{- $color := include ".gen.color.json" | mustFromJson -}}

# Make colors work properly
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc" # True color

# Set the default shell
set -g default-shell "{{ include ".gen.shell" }}"

# Use vi mode instead of emacs
set -g mode-keys vi

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Remove the escape delay
set -s escape-time 0

# Window settings
set -g allow-rename off
set -g renumber-windows on

# Aliases
set -g command-alias quit=kill-session

# Unbind all default keys
unbind -na
unbind -a

# Change prefix to C-a
set -g prefix C-a
bind C-a send-prefix

# Basics
bind -N "Enter command prompt"      :   command-prompt
bind -N "Show pane indexes"         q   display-panes
bind -N "Clear screen"              M-c send-keys C-l \; run-shell "sleep 0.1" \; clear-history
bind -N "Detach current client"     d   detach-client
bind -N "Reload configuration file" M-r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"
bind -N "Toggle status bar"         b   set -g status
bind -N "Rename current window"     ,   command-prompt -p "Rename window:" "rename-window '%%'"
bind -N "List keybindings"          ?   list-keys -N

# Session navigation
bind -N "Switch to next session"       j       switch-client -n
bind -N "Switch to previous session"   k       switch-client -p
bind -N "Switch to last session"       M-Space switch-client -l
bind -N "Select session interactively" S       choose-tree -Zs

# Window navigation
bind -N "Select previous window"      h     select-window -t -1
bind -N "Select next window"          l     select-window -t +1
bind -N "Select last window"          Space select-window -l
bind -N "Select window interactively" W     choose-tree -Zw
bind -N "Select window 1"             1     select-window -t 1
bind -N "Select window 2"             2     select-window -t 2
bind -N "Select window 3"             3     select-window -t 3
bind -N "Select window 4"             4     select-window -t 4
bind -N "Select window 5"             5     select-window -t 5
bind -N "Select window 6"             6     select-window -t 6
bind -N "Select window 7"             7     select-window -t 7
bind -N "Select window 8"             8     select-window -t 8
bind -N "Select window 9"             9     select-window -t 9
bind -N "Select window 10"            0     select-window -t 10

# Window control
bind -N "Create new window"                   c   new-window -a -n "[new]"
bind -N "Create new window with current path" C   new-window -a -n "[new]" -c "#{pane_current_path}"
bind -N "Swap with previous window"           M-h swap-window -t -1 \; select-window -t -1
bind -N "Swap with next window"               M-l swap-window -t +1 \; select-window -t +1
bind -N "Kill the current window"             X   kill-window

# Pane navigation
bind -N "Select pane to the left"  -n C-h select-pane -L
bind -N "Select pane below"        -n C-j select-pane -D
bind -N "Select pane above"        -n C-k select-pane -U
bind -N "Select pane to the right" -n C-l select-pane -R

# Pane control
bind -N "Mark the current pane"                        m   select-pane -m
bind -N "Unmark the current pane"                      M   select-pane -M
bind -N "Split window vertically"                      \\  split-window -h
bind -N "Split window vertically with current path"    |   split-window -h -c "#{pane_current_path}"
bind -N "Split window horizontally"                    -   split-window -v
bind -N "Split window horizontally with current path"  _   split-window -v -c "#{pane_current_path}"
bind -N "Rotate panes forward"                         r   rotate-window -DZ
bind -N "Rotate panes reverse"                         R   rotate-window -UZ
bind -N "Swap with pane to left"                       H   swap-pane -d -t "{left-of}"
bind -N "Swap with pane below"                         J   swap-pane -d -t "{down-of}"
bind -N "Swap with pane above"                         K   swap-pane -d -t "{up-of}"
bind -N "Swap with pane to right"                      L   swap-pane -d -t "{right-of}"
bind -N "Swap with marked pane"                        M-s swap-pane -d
bind -N "Break pane into new window"                   !   break-pane -a -n [broken]
bind -N "Kill the current pane"                        x   kill-pane

# Pane synchronization
bind -N "Synchronize panes" s setw synchronize-panes

# Resize panes
bind -N "Toggle pane zoom"             z       resize-pane -Z
bind -N "Resize pane left by 1"     -n C-Left  resize-pane -L
bind -N "Resize pane downward by 1" -n C-Down  resize-pane -D
bind -N "Resize pane upward by 1"   -n C-Up    resize-pane -U
bind -N "Resize pane right by 1"    -n C-Right resize-pane -R
bind -N "Resize pane left by 5"     -n M-Left  resize-pane -L 5
bind -N "Resize pane downward by 5" -n M-Down  resize-pane -D 5
bind -N "Resize pane upward by 5"   -n M-Up    resize-pane -U 5
bind -N "Resize pane right by 5"    -n M-Right resize-pane -R 5

# Layout
bind -N "Switch to layout mode"                \#  switch-client -T layout
bind -N "Use even-horizontal layout" -T layout h   select-layout even-horizontal
bind -N "Use even-vertical layout"   -T layout v   select-layout even-vertical
bind -N "Use main-horizontal layout" -T layout m   select-layout main-horizontal
bind -N "Use main-vertical layout"   -T layout M-m select-layout main-vertical
bind -N "Use tiled layout"           -T layout t   select-layout tiled
bind -N "Use next layout"            -T layout n   next-layout

# VI mode
bind -N "Enter copy mode"                v copy-mode
bind -N "Search for text"                / copy-mode \; send-keys ?
bind -N "Begin selection"   -T copy-mode v send-keys -X begin-selection
bind -N "Copy to clipboard" -T copy-mode y send-keys -X copy-pipe-and-cancel "clipboard --copy"

# Status bar
set -g status-style fg="#{{ $color.base03.hex.rgb }}",bg=default
set -g status-justify absolute-centre
set -g status-position bottom
set -g status-left ""
set -g status-right "#{?client_prefix,#[fg=#{{ $color.base09.hex.rgb }}]● ,}#{?pane_synchronized,#[fg=#{{ $color.base09.hex.rgb }}] ,}#[fg=#{{ $color.base03.hex.rgb }}]歷#S"
set -g window-status-format "#[fg=#{{ $color.base03.hex.rgb }}] #W#{?window_zoomed_flag, ,} "
set -g window-status-current-format "#[fg=#{{ $color.base09.hex.rgb }}] #W#{?window_zoomed_flag, ,} "
set -g window-status-current-style none

# Modes and selections
set -g message-style fg=default,bg=#{{ $color.base03.hex.rgb }}
set -g mode-style fg=default,bg=#{{ $color.base03.hex.rgb }}

# Border colors
set -g pane-border-style fg=#{{ $color.base03.hex.rgb }}
set -g pane-active-border-style fg=#{{ $color.base09.hex.rgb }}
