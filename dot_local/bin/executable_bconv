#!/usr/bin/env python3

_DIGITS = "0123456789abcdefghijklmnopqrstuvwxyz"

def inbase(x, base):
    if x > 0:
        neg = False
    elif x < 0:
        neg = True
        x = -x
    else:
        return "0"
    ds = []
    while x:
        ds.append(_DIGITS[x % base])
        x //= base
    if neg:
        ds.append('-')
    return ''.join(reversed(ds))

if __name__ == "__main__":
    import argparse
    import sys

    parser = argparse.ArgumentParser(description="Convert integer bases")
    parser.add_argument("value", type=str, help="the integer to convert")
    parser.add_argument("-i",
        type=int, action="store", default=10,
        help="base of input integer")
    parser.add_argument("-o",
        type=int, action="store", default=10,
        help="base of output integer")
    args = parser.parse_args()

    if args.i < 2 or 36 < args.i or args.o < 2 or 36 < args.o:
        print("base must be between 2 and 36", file=sys.stderr)
        sys.exit(1)

    print(inbase(int(args.value, args.i), args.o))
